---

- name: Verify
  hosts: hashlookup
  gather_facts: true
  tasks:
    - name: Gather package facts
      ansible.builtin.package_facts:
        manager: auto
    - name: Validate that needed packages are present
      ansible.builtin.assert:
        that: ansible_facts.packages['kvrocks']

    - name: Check kvrocks config file
      ansible.builtin.stat:
        path: /var/_hashlookup/hashlookup-server/etc/kvrocks.conf
      register: cfg1
    - name: Validate kvrocks config present
      ansible.builtin.assert:
        that: cfg1.stat.exists and cfg1.stat.size != 0

    - name: Check hashlookup-server config file
      ansible.builtin.stat:
        path: /var/_hashlookup/hashlookup-server/etc/server.conf
      register: cfg2
    - name: Validate hashlookup-server config present
      ansible.builtin.assert:
        that: cfg2.stat.exists and cfg2.stat.size != 0

    - name: Debug | var=ansible_virtualization_type
      ansible.builtin.debug:
        var: ansible_virtualization_type
        verbosity: 1

    - name: Ensure kvrocks process is running
      ansible.builtin.command: pgrep -u _hashlookup kvrocks
      register: ps
      changed_when: false
      failed_when: false
    - name: Validate ps output
      ansible.builtin.assert:
        that: ps.stdout
      when: >
        not (ansible_virtualization_type is defined and
              (ansible_virtualization_type == "docker" or ansible_virtualization_type == "containerd")
            )

    - name: Ensure hashlookup python process is running
      ansible.builtin.command: pgrep -u _hashlookup python
      register: ps2
      changed_when: false
      failed_when: false
    - name: Validate hashlookup ps output
      ansible.builtin.assert:
        that: ps2.stdout
      when: >
        not (ansible_virtualization_type is defined and
              (ansible_virtualization_type == "docker" or ansible_virtualization_type == "containerd")
            )

    - name: Ensure procps package is present
      ansible.builtin.package:
        name: procps
        state: present
      when: ansible_os_family == "RedHat"
    - name: Check all processes
      ansible.builtin.command: ps aux
      changed_when: false
      register: psa
    - name: Debug | process output
      ansible.builtin.debug:
        var: psa
        verbosity: 1

    - name: Ensure ports are listening
      ansible.builtin.wait_for:
        host: "{{ item.h }}"
        port: "{{ item.p }}"
        timeout: 10
      with_items:
        - { h: localhost, p: "6666" }
        - { h: localhost, p: "5000" }
      when: >
        not (ansible_virtualization_type is defined and
              (ansible_virtualization_type == "docker" or ansible_virtualization_type == "containerd")
            )

    - name: Check hashlookup-server info page works
      ansible.builtin.uri:
        url: http://localhost:5000/info
        return_content: yes
        headers:
          Content-Type: application/json
      register: info
      failed_when: "'stat:hashlookup_total_keys' not in info.content"
      when: >
        not (ansible_virtualization_type is defined and
              (ansible_virtualization_type == "docker" or ansible_virtualization_type == "containerd")
            )
