---
name: default-bare

on:
  push:
  pull_request:
  schedule:  # run weekly, every Thursday 01:00
    - cron: '0 1 * * 4'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        os: [ubuntu-latest, ubuntu-20.04]
    env:
      ANSIBLE_CALLBACK_ENABLED: profile_tasks

    steps:
      - uses: actions/checkout@v2
        with:
          path: juju4.hashlookupserver
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip3 install ansible-lint flake8 yamllint
          which ansible
          pip3 install ansible
          pip3 show ansible
          ls -l $HOME/.local/bin || true
          ls -l /opt/hostedtoolcache/Python/3.9.1/x64/bin || true
          echo "/opt/hostedtoolcache/Python/3.9.1/x64/bin" >> $GITHUB_PATH
          ansible --version
          cd $GITHUB_WORKSPACE/juju4.hashlookupserver
          ansible-galaxy install -r molecule/default/requirements.yml
          { echo '[defaults]'; echo 'callbacks_enabled = profile_tasks, timer'; echo 'roles_path = ../:/home/runner/.ansible/roles'; echo 'ansible_python_interpreter: /usr/bin/python3'; } >> ansible.cfg
      - name: Environment
        run: |
          pwd
          env
          find -ls
      - name: Before script - systemctl
        run: |
          systemd-analyze security || true
          systemctl status --all --no-pager || true
      - name: run test
        run: |
          cd $GITHUB_WORKSPACE/juju4.hashlookupserver && ansible-playbook -i localhost, --connection=local --become -vvv molecule/default/converge.yml
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
      - name: idempotency run
        run: |
          cd $GITHUB_WORKSPACE/juju4.hashlookupserver && ansible-playbook -i localhost, --connection=local --become -vvv molecule/default/converge.yml | tee /tmp/idempotency.log | grep -q 'changed=0.*failed=0'  && (echo 'Idempotence test: pass' && exit 0)  || (echo 'Idempotence test: fail' && cat /tmp/idempotency.log && exit 1)
      - name: On failure
        run: |
          systemctl -l --no-pager status
        if: env.WORKFLOW_CONCLUSION == 'failure'  # notify only if failure
      - name: After script - systemctl
        run: |
          systemd-analyze security || true
          systemctl --failed || true
          systemctl status hashlookupserver || true
        if: ${{ always() }}
        continue-on-error: true
      - name: After script - processes
        run: |
          ps aux
        if: ${{ always() }}
        continue-on-error: true
      - name: After script - network
        run: |
          sudo ss -tunap
        if: ${{ always() }}
        continue-on-error: true
      - name: After script - curl
        run: |
          curl -v http://localhost:5000/info || true
        if: ${{ always() }}
        continue-on-error: true
